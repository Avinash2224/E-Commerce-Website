{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat;\n\n// Values\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex';\n\n// Data Attributes\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\n// ARIA Attributes\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n  initiateInputRange(index) {\n    const inputElement = document.createElement('input');\n    inputElement.type = 'range';\n    inputElement.min = this.options.min;\n    inputElement.max = this.options.max;\n    inputElement.step = this.options.step;\n    inputElement.value = this.props.value ? this.options.value[index] : this.options.defaultValue[index];\n    return inputElement;\n  }\n  updateInputRange(index) {\n    this.input[index].min = this.options.min;\n    this.input[index].max = this.options.max;\n    this.input[index].step = this.options.step;\n    this.input[index].value = this.props.value ? this.options.value[index] : index === 1 ? this.value.max : this.value.min;\n  }\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      // input[type=\"range\"] elements for syncing values\n      this.input = [this.initiateInputRange(0), this.initiateInputRange(1)];\n      this.value = this.setMinMaxProps();\n\n      // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n      this.index = this.setMinMaxProps(0, 1);\n\n      // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps();\n\n      // Slidable range limits (when a thumb is dragged)\n      this.rangeLimits = this.setMinMaxProps();\n\n      // Slider value depending on the user interaction\n      this.sliderValue = this.setMinMaxProps();\n\n      // For dragging thumbs and range\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0;\n\n      // initial\n      this.reset(true);\n\n      // Add listeners to element\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      });\n\n      // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      });\n\n      // Add listeners to range\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      });\n\n      // Define and add global listeners\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n  componentDidUpdate() {\n    this.updateInputRange(0);\n    this.updateInputRange(1);\n    this.reset();\n  }\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n  reset() {\n    let first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.isControlled = !!this.props.value;\n    if (this.isControlled) {\n      if (first || this.props.value !== this.lastValueProp) {\n        this.externalInput = true;\n      }\n      this.lastValueProp = this.props.value;\n    }\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n    if (first) {\n      this.sliderValue = this.value;\n    }\n  }\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  }\n\n  // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n  safeMinMaxValues() {\n    let error = false;\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  }\n\n  // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    }\n\n    // Boolean Values\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  }\n\n  // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].value, this.input[1].value);\n\n    // var value is synced with the values set in the input elements if no newValue is passed\n    newValue = newValue || currentValue;\n    this.input[this.index.min].value = newValue.min;\n    this.input[this.index.max].value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues();\n\n    // Check if the thumbs cross each other\n    if (this.value.min > this.value.max) {\n      var _this$props, _this$props2, _this$props3, _this$props4;\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max;\n\n      // Switch thumb attributes\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, ARIA_LABEL, (_this$props = this.props) === null || _this$props === void 0 || (_this$props = _this$props.ariaLabel) === null || _this$props === void 0 ? void 0 : _this$props[0]);\n      this.setNodeAttribute(this.thumb[this.index.max].current, ARIA_LABEL, (_this$props2 = this.props) === null || _this$props2 === void 0 || (_this$props2 = _this$props2.ariaLabel) === null || _this$props2 === void 0 ? void 0 : _this$props2[1]);\n      this.setNodeAttribute(this.thumb[this.index.min].current, ARIA_LABELLEDBY, (_this$props3 = this.props) === null || _this$props3 === void 0 || (_this$props3 = _this$props3.ariaLabelledBy) === null || _this$props3 === void 0 ? void 0 : _this$props3[0]);\n      this.setNodeAttribute(this.thumb[this.index.max].current, ARIA_LABELLEDBY, (_this$props4 = this.props) === null || _this$props4 === void 0 || (_this$props4 = _this$props4.ariaLabelledBy) === null || _this$props4 === void 0 ? void 0 : _this$props4[1]);\n\n      // Switch thumb drag labels\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n      this.syncValues();\n    }\n    this.sliderValue = forceSet ? this.sliderValue : newValue;\n    let valueSet = false;\n    const currentValues = [currentValue.min, currentValue.max].sort((a, b) => a - b);\n    const elementValues = [this.input[0].value, this.input[1].value].sort((a, b) => a - b);\n    if (currentValues[0] !== elementValues[0] || forceSet) {\n      valueSet = true;\n    }\n    if (currentValues[1] !== elementValues[1] || forceSet) {\n      valueSet = true;\n    }\n\n    // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  }\n\n  // Sync var value with the input elements\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].value;\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  }\n\n  // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  }\n\n  // Called when,\n  // -> disabled property is modified\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  }\n\n  // Called when,\n  // -> thumbsDisabled property is modified\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  }\n\n  // Called when,\n  // -> min or max values are modified\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0][_] = this.options[_];\n      this.input[1][_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  }\n\n  // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  }\n\n  // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  }\n\n  // thumb position calculation depending upon the pointer position\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n    return currPos;\n  }\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    }\n\n    // No action if both thumbs are disabled\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        }\n        // When max thumb reaches lower limit\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        }\n        // When range / min thumb reaches lower limit\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n          this.startPos = lastPos;\n        }\n        // When range / max thumb reaches upper limit\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n          this.startPos = lastPos;\n        }\n      }\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n  actualStepValue() {\n    const step = float(this.input[0].step);\n    return this.input[0].step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  }\n\n  // Step value (up or down) using arrow keys\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0);\n\n      // When min thumb reaches upper limit\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      }\n\n      // When max thumb reaches lower limit\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n  render() {\n    var _this$props5, _this$props6, _this$props7, _this$props8;\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true,\n      \"aria-label\": (_this$props5 = this.props) === null || _this$props5 === void 0 || (_this$props5 = _this$props5.ariaLabel) === null || _this$props5 === void 0 ? void 0 : _this$props5[0],\n      \"aria-labelledby\": (_this$props6 = this.props) === null || _this$props6 === void 0 || (_this$props6 = _this$props6.ariaLabelledBy) === null || _this$props6 === void 0 ? void 0 : _this$props6[0]\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true,\n      \"aria-label\": (_this$props7 = this.props) === null || _this$props7 === void 0 || (_this$props7 = _this$props7.ariaLabel) === null || _this$props7 === void 0 ? void 0 : _this$props7[1],\n      \"aria-labelledby\": (_this$props8 = this.props) === null || _this$props8 === void 0 || (_this$props8 = _this$props8.ariaLabelledBy) === null || _this$props8 === void 0 ? void 0 : _this$props8[1]\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n}\n;\nvar _default = exports.default = RangeSlider;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","abs","Math","float","parseFloat","MIN","MAX","ANY","VERTICAL","TABINDEX","DATA_LOWER","DATA_UPPER","DATA_ACTIVE","DATA_VERTICAL","DATA_DISABLED","ARIA_LABEL","ARIA_LABELLEDBY","RangeSlider","PureComponent","constructor","element","createRef","input","thumb","range","options","isControlled","externalInput","isComponentMounted","lastValueProp","initiateInputRange","index","inputElement","document","createElement","type","min","max","step","props","defaultValue","updateInputRange","componentDidMount","setMinMaxProps","thumbWidth","thumbHeight","rangeLimits","sliderValue","maxRangeWidth","rangeWidth","isDragging","thumbDrag","startPos","reset","addNodeEventListener","current","elementFocused","forEach","initiateThumbDrag","which","preventDefault","stepValue","initiateRangeDrag","pointerMoveEvent","drag","pointerUpEvent","removeNodeAttribute","onThumbDragEnd","onRangeDragEnd","resizeEvent","syncThumbDimensions","updateThumbs","updateRange","window","componentDidUpdate","componentWillUnmount","removeNodeEventListener","first","arguments","length","undefined","updateOrientation","setValue","updateRangeLimits","updateDisabledState","updateThumbsDisabledState","updateTabIndexes","isNumber","isNaN","iterateMinMaxProps","fn","getSetProps","condition","expression","setNodeAttribute","node","attribute","setAttribute","removeAttribute","event","isPointerEvent","addEventListener","passive","capture","removeEventListener","fallbackToDefault","property","ifVerticalElse","vertical","horizontal","orientation","currentIndex","safeMinMaxValues","error","safeThumbsDisabledValues","thumbsDisabled","Array","push","newValue","forceSet","callback","currentValue","syncValues","_this$props","_this$props2","_this$props3","_this$props4","ariaLabel","ariaLabelledBy","valueSet","currentValues","sort","b","elementValues","onInput","updateAriaValueAttributes","_","style","concat","elementBounds","getBoundingClientRect","deltaOffset","bottom","top","right","left","deltaDimension","disabled","d","currIndex","updateLimits","limit","m","getComputedStyle","width","height","currentPosition","nodeBounds","currPos","doesntHaveClassName","className","target","classList","contains","repeat","setFocus","rangeSlideDisabled","deltaMin","deltaMax","nearestThumbIndex","initiateDrag","onThumbDragStart","onRangeDragStart","lastPos","delta","lower","upper","actualStepValue","key","direction","render","_this$props5","_this$props6","_this$props7","_this$props8","id","ref","role","_default"],"sources":["/Users/avinashsrivastav/Documents/codes/fullstack/client/node_modules/react-range-slider-input/dist/components/RangeSlider.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.weak-map.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es.array.sort.js\");\nrequire(\"core-js/modules/es.parse-float.js\");\nrequire(\"core-js/modules/esnext.iterator.constructor.js\");\nrequire(\"core-js/modules/esnext.iterator.for-each.js\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat;\n\n// Values\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex';\n\n// Data Attributes\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\n// ARIA Attributes\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n  initiateInputRange(index) {\n    const inputElement = document.createElement('input');\n    inputElement.type = 'range';\n    inputElement.min = this.options.min;\n    inputElement.max = this.options.max;\n    inputElement.step = this.options.step;\n    inputElement.value = this.props.value ? this.options.value[index] : this.options.defaultValue[index];\n    return inputElement;\n  }\n  updateInputRange(index) {\n    this.input[index].min = this.options.min;\n    this.input[index].max = this.options.max;\n    this.input[index].step = this.options.step;\n    this.input[index].value = this.props.value ? this.options.value[index] : index === 1 ? this.value.max : this.value.min;\n  }\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      // input[type=\"range\"] elements for syncing values\n      this.input = [this.initiateInputRange(0), this.initiateInputRange(1)];\n      this.value = this.setMinMaxProps();\n\n      // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n      this.index = this.setMinMaxProps(0, 1);\n\n      // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps();\n\n      // Slidable range limits (when a thumb is dragged)\n      this.rangeLimits = this.setMinMaxProps();\n\n      // Slider value depending on the user interaction\n      this.sliderValue = this.setMinMaxProps();\n\n      // For dragging thumbs and range\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0;\n\n      // initial\n      this.reset(true);\n\n      // Add listeners to element\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      });\n\n      // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      });\n\n      // Add listeners to range\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      });\n\n      // Define and add global listeners\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n  componentDidUpdate() {\n    this.updateInputRange(0);\n    this.updateInputRange(1);\n    this.reset();\n  }\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n  reset() {\n    let first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.isControlled = !!this.props.value;\n    if (this.isControlled) {\n      if (first || this.props.value !== this.lastValueProp) {\n        this.externalInput = true;\n      }\n      this.lastValueProp = this.props.value;\n    }\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n    if (first) {\n      this.sliderValue = this.value;\n    }\n  }\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  }\n\n  // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n  safeMinMaxValues() {\n    let error = false;\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  }\n\n  // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    }\n\n    // Boolean Values\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  }\n\n  // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].value, this.input[1].value);\n\n    // var value is synced with the values set in the input elements if no newValue is passed\n    newValue = newValue || currentValue;\n    this.input[this.index.min].value = newValue.min;\n    this.input[this.index.max].value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues();\n\n    // Check if the thumbs cross each other\n    if (this.value.min > this.value.max) {\n      var _this$props, _this$props2, _this$props3, _this$props4;\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max;\n\n      // Switch thumb attributes\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, ARIA_LABEL, (_this$props = this.props) === null || _this$props === void 0 || (_this$props = _this$props.ariaLabel) === null || _this$props === void 0 ? void 0 : _this$props[0]);\n      this.setNodeAttribute(this.thumb[this.index.max].current, ARIA_LABEL, (_this$props2 = this.props) === null || _this$props2 === void 0 || (_this$props2 = _this$props2.ariaLabel) === null || _this$props2 === void 0 ? void 0 : _this$props2[1]);\n      this.setNodeAttribute(this.thumb[this.index.min].current, ARIA_LABELLEDBY, (_this$props3 = this.props) === null || _this$props3 === void 0 || (_this$props3 = _this$props3.ariaLabelledBy) === null || _this$props3 === void 0 ? void 0 : _this$props3[0]);\n      this.setNodeAttribute(this.thumb[this.index.max].current, ARIA_LABELLEDBY, (_this$props4 = this.props) === null || _this$props4 === void 0 || (_this$props4 = _this$props4.ariaLabelledBy) === null || _this$props4 === void 0 ? void 0 : _this$props4[1]);\n\n      // Switch thumb drag labels\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n      this.syncValues();\n    }\n    this.sliderValue = forceSet ? this.sliderValue : newValue;\n    let valueSet = false;\n    const currentValues = [currentValue.min, currentValue.max].sort((a, b) => a - b);\n    const elementValues = [this.input[0].value, this.input[1].value].sort((a, b) => a - b);\n    if (currentValues[0] !== elementValues[0] || forceSet) {\n      valueSet = true;\n    }\n    if (currentValues[1] !== elementValues[1] || forceSet) {\n      valueSet = true;\n    }\n\n    // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  }\n\n  // Sync var value with the input elements\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].value;\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  }\n\n  // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  }\n\n  // Called when,\n  // -> setValue is called and a value is set\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  }\n\n  // Called when,\n  // -> disabled property is modified\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  }\n\n  // Called when,\n  // -> thumbsDisabled property is modified\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  }\n\n  // Called when,\n  // -> min or max values are modified\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0][_] = this.options[_];\n      this.input[1][_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  }\n\n  // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  }\n\n  // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  }\n\n  // thumb position calculation depending upon the pointer position\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n    return currPos;\n  }\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    }\n\n    // No action if both thumbs are disabled\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        }\n        // When max thumb reaches lower limit\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        }\n        // When range / min thumb reaches lower limit\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n          this.startPos = lastPos;\n        }\n        // When range / max thumb reaches upper limit\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n          this.startPos = lastPos;\n        }\n      }\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n  actualStepValue() {\n    const step = float(this.input[0].step);\n    return this.input[0].step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  }\n\n  // Step value (up or down) using arrow keys\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0);\n\n      // When min thumb reaches upper limit\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      }\n\n      // When max thumb reaches lower limit\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n  render() {\n    var _this$props5, _this$props6, _this$props7, _this$props8;\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true,\n      \"aria-label\": (_this$props5 = this.props) === null || _this$props5 === void 0 || (_this$props5 = _this$props5.ariaLabel) === null || _this$props5 === void 0 ? void 0 : _this$props5[0],\n      \"aria-labelledby\": (_this$props6 = this.props) === null || _this$props6 === void 0 || (_this$props6 = _this$props6.ariaLabelledBy) === null || _this$props6 === void 0 ? void 0 : _this$props6[0]\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true,\n      \"aria-label\": (_this$props7 = this.props) === null || _this$props7 === void 0 || (_this$props7 = _this$props7.ariaLabel) === null || _this$props7 === void 0 ? void 0 : _this$props7[1],\n      \"aria-labelledby\": (_this$props8 = this.props) === null || _this$props8 === void 0 || (_this$props8 = _this$props8.ariaLabelledBy) === null || _this$props8 === void 0 ? void 0 : _this$props8[1]\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n}\n;\nvar _default = exports.default = RangeSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}