{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsrivastav/Documents/codes/fullstack/src/Components/CountryDropdown/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Button from '@mui/material/Button';\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { MyContext } from \"../../App\";\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountryDropdown = () => {\n  _s();\n  const {\n    countryList,\n    setCountryList\n  } = useContext(MyContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(\"Select Country\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n\n    // Fetch country list only if it's empty\n    if (countryList.length === 0) {\n      getCountry(\"https://countriesnow.space/api/v0.1/countries/\");\n    }\n  };\n  const handleClose = country => {\n    setAnchorEl(null);\n    if (country) {\n      setSelectedCountry(country); // Update the selected country\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const getCountry = async url => {\n    try {\n      const response = await axios.get(url);\n      setCountryList(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching country data:\", error);\n    }\n  };\n\n  // Filter countries based on search query\n  const filteredCountries = countryList.filter(country => country.country.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"countryDrop\",\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: selectedCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(FaAngleDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"8px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          placeholder: \"Search Country\",\n          style: {\n            width: \"100%\",\n            padding: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), filteredCountries.length > 0 ? filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleClose(country.country),\n        children: country.country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"No countries found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CountryDropdown, \"8Sfc+2MZBk7+2ZSjQaKjg3UWKXQ=\");\n_c = CountryDropdown;\nexport default CountryDropdown;\nvar _c;\n$RefreshReg$(_c, \"CountryDropdown\");","map":{"version":3,"names":["React","useState","useContext","Button","FaAngleDown","MyContext","Menu","MenuItem","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CountryDropdown","_s","countryList","setCountryList","anchorEl","setAnchorEl","selectedCountry","setSelectedCountry","searchQuery","setSearchQuery","handleClick","event","currentTarget","length","getCountry","handleClose","country","handleSearchChange","target","value","url","response","get","data","error","console","filteredCountries","filter","toLowerCase","includes","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","onClose","style","padding","type","onChange","placeholder","width","map","index","disabled","_c","$RefreshReg$"],"sources":["/Users/avinashsrivastav/Documents/codes/fullstack/src/Components/CountryDropdown/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Button from '@mui/material/Button';\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { MyContext } from \"../../App\"; \nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport axios from 'axios';\n\nconst CountryDropdown = () => {\n  const { countryList, setCountryList } = useContext(MyContext); \n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(\"Select Country\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n\n    // Fetch country list only if it's empty\n    if (countryList.length === 0) {\n      getCountry(\"https://countriesnow.space/api/v0.1/countries/\");\n    }\n  };\n\n  const handleClose = (country) => {\n    setAnchorEl(null);\n    if (country) {\n      setSelectedCountry(country);  // Update the selected country\n    }\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const getCountry = async (url) => {\n    try {\n      const response = await axios.get(url);\n      setCountryList(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching country data:\", error);\n    }\n  };\n\n  // Filter countries based on search query\n  const filteredCountries = countryList.filter((country) =>\n    country.country.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <>\n      <Button className=\"countryDrop\" onClick={handleClick}>\n        <div className=\"info d-flex flex-column\">\n          <span className=\"label\">Your Location</span>\n          <span className=\"name\">{selectedCountry}</span> {/* Display selected country */}\n        </div>\n        <span className=\"ml-auto\"><FaAngleDown /></span>\n      </Button>\n\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n        {/* Search field */}\n        <div style={{ padding: \"8px\" }}>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            placeholder=\"Search Country\"\n            style={{ width: \"100%\", padding: \"8px\" }}\n          />\n        </div>\n\n        {/* Filtered countries */}\n        {filteredCountries.length > 0 ? (\n          filteredCountries.map((country, index) => (\n            <MenuItem key={index} onClick={() => handleClose(country.country)}>\n              {country.country}\n            </MenuItem>\n          ))\n        ) : (\n          <MenuItem disabled>No countries found</MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n};\n\nexport default CountryDropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}