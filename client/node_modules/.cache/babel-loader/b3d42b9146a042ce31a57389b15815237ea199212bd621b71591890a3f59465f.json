{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsrivastav/Documents/codes/fullstack/src/Components/CountryDropdown/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Button from '@mui/material/Button';\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { MyContext } from \"../../App\";\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountryDropdown = () => {\n  _s();\n  const {\n    countryList,\n    setCountryList\n  } = useContext(MyContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(\"Select Country\");\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n\n    // Fetch country list only if it's empty\n    if (countryList.length === 0) {\n      getCountry(\"https://countriesnow.space/api/v0.1/countries/\");\n    }\n  };\n  const handleClose = country => {\n    setAnchorEl(null);\n    if (country) {\n      setSelectedCountry(country); // Update the selected country\n    }\n  };\n  const getCountry = async url => {\n    try {\n      const response = await axios.get(url);\n      setCountryList(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching country data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"countryDrop\",\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: selectedCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(FaAngleDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: countryList.length > 0 ? countryList.map((country, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleClose(country.country),\n        children: country.country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CountryDropdown, \"WEHA/lX420kKkPrrJLe+rT//ksA=\");\n_c = CountryDropdown;\nexport default CountryDropdown;\nvar _c;\n$RefreshReg$(_c, \"CountryDropdown\");","map":{"version":3,"names":["React","useState","useContext","Button","FaAngleDown","MyContext","Menu","MenuItem","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CountryDropdown","_s","countryList","setCountryList","anchorEl","setAnchorEl","selectedCountry","setSelectedCountry","handleClick","event","currentTarget","length","getCountry","handleClose","country","url","response","get","data","error","console","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","onClose","map","index","disabled","_c","$RefreshReg$"],"sources":["/Users/avinashsrivastav/Documents/codes/fullstack/src/Components/CountryDropdown/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Button from '@mui/material/Button';\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { MyContext } from \"../../App\"; \nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport axios from 'axios';\n\nconst CountryDropdown = () => {\n  const { countryList, setCountryList } = useContext(MyContext); \n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(\"Select Country\");\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n\n    // Fetch country list only if it's empty\n    if (countryList.length === 0) {\n      getCountry(\"https://countriesnow.space/api/v0.1/countries/\");\n    }\n  };\n\n  const handleClose = (country) => {\n    setAnchorEl(null);\n    if (country) {\n      setSelectedCountry(country);  // Update the selected country\n    }\n  };\n\n  const getCountry = async (url) => {\n    try {\n      const response = await axios.get(url);\n      setCountryList(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching country data:\", error);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"countryDrop\" onClick={handleClick}>\n        <div className=\"info d-flex flex-column\">\n          <span className=\"label\">Your Location</span>\n          <span className=\"name\">{selectedCountry}</span> {/* Display selected country */}\n        </div>\n        <span className=\"ml-auto\"><FaAngleDown /></span>\n      </Button>\n\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n        {countryList.length > 0 ? (\n          countryList.map((country, index) => (\n            <MenuItem key={index} onClick={() => handleClose(country.country)}>\n              {country.country}\n            </MenuItem>\n          ))\n        ) : (\n          <MenuItem disabled>Loading...</MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n};\n\nexport default CountryDropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}